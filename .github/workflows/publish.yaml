---
name: ðŸš€ Publish NPM Package
run-name: ðŸš€ Publish NPM Package - Using Latest Git Tag from ${{ github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The distribution tag to apply to the published package (e.g., latest, next)"
        required: true
        type: choice
        options:
          - latest
          - next

  push:
    tags:
      - "v*.*.*" # stable
      - "v*.*.*-alpha.*" # alpha prerelease
      - "v*.*.*-beta.*" # beta prerelease
      - "v*.*.*-rc.*" # rc prerelease

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: ${{ vars.CI }}
  HUSKY: ${{ vars.HUSKY }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  publish-npm-package:
    name: ðŸš€ Publish NPM Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for provenance generation
    steps:
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - uses: ./.github/actions/setup
        with:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ðŸš€ Publish NPM Package
        run: |
          # pnpm publish output errors are not always JSON - Patches Nx v20.8.0 release error handler to log the error - Remove if fixed in Nx on an upgrade
          # Patch for Nx error output
          sed -i '291s/.*/console.log(err); const stdoutData = JSON.parse(err.stdout?.toString() || "{}");/' node_modules/@nx/js/src/executors/release-publish/release-publish.impl.js

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
          else
            TAG_NAME="${{ github.ref_name }}"
            if [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              TAG="latest"
            else
              TAG="next"
            fi
          fi

          echo "Publishing with tag: $TAG"
          pnpm nx:publish --tag $TAG
        env:
          NPM_CONFIG_PROVENANCE: true
