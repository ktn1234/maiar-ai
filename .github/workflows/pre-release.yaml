---
name: 🏷️ Github Pre-release
run-name: 🏷️ Github Pre-release - Tag & Publish Pre-release from ${{ github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      pre-id:
        description: "Pre-release identifier (e.g., alpha, beta, rc)"
        required: true
        type: choice
        options:
          - alpha
          - beta
          - rc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: ${{ vars.CI }}
  HUSKY: ${{ vars.HUSKY }}

jobs:
  github-release:
    name: 🏷️ Github Pre-release
    runs-on: ubuntu-latest
    steps:
      - name: 🔑 Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: 🛒 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: 🔧 Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - uses: ./.github/actions/setup

      - name: 🔖 Github Release (Tag + Release)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm nx:release version prerelease --preid ${{ github.event.inputs.pre-id }}

          # Use this locally when you've manually bumped a prerelease (e.g. 0.0.1-alpha.0 → 0.1.0-alpha.0, patch prerelease → minor prerelease)
          # Generates changelog from last *stable* tag up to current prerelease version
          VERSION=$(jq -r '.version' packages/core/package.json)
          LATEST_STABLE=$(git tag --list | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          pnpm nx:release changelog $VERSION --from $LATEST_STABLE
